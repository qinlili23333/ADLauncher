<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAA2RJREFUeF7t
        3L2KFEEUBeCRVTB2XTDzBfxZxB8w2sTARITNfBCfZwMfRIMNxFcQI19ABBWT8R77FMxqT/ep7unpqunz
        QcEwU9V177mCOKy7MjMzMzMzMzMzMzMzMzMzswqt1+ujWK9ivY31JtYtflQs1MhaUTNqP+JHdYnCT2Jd
        xtr0NdZTbikOamONm9DDbW6pQxR8LdYHVN/iR6zn3FoM1MTa2lxwWx2i4PtN3VsVNQTUwpq63OH28kWx
        503NnYoYAmpgLX1e8kj5otiHTc29Zh0C7mYNikc8Voco+GNTd69ZhoA7ebfic6wbPFqHKPg0ltrgXoeA
        u3inAvue8GhdovDcRicfAu7gXYq91DQpNMBGFJM2jGfzDkX94SdohA0pJmk8nnnGZysOJ/wEDbExBfad
        8ehoeFasX3iw4Huswwo/QWNsUIHARg8Bz+CzFKitzr9wVWiQjSpGDQFn+QzF4YefoFE2rBg0BJzhWcVy
        wk/QMBtXZA0Be3lGsbzwEzTOABTSELCHexXLDT9BAAxC0TkEfMY9CoefIAgGomgdAt7jZwqH/y8EwmAU
        V4aA13xP4fC3QTAMSPF3CLFe8LXiWyyH3wUBxcoZwu/mZS+Ef8prrEsEhSEgsF1x+LkQGIMby+EPheAY
        4FAOfywEyCBzOfxdQZAMVOXwdwlhMlSVB7ArCJKB5vIQxkKADHIoD2EoBMcAx/IQckVg/ofYXCKo3K8i
        fjYve3kIfSKgIV/G5XwTiiH4y7g2CCZWVvg8irP+OnoMBMJgFFfCT/AeP1N4CAmCYCCK1vATfMY9Cg8B
        ATAIRWf4CfZwr2K5Q0DjDEAhhZ9gL88oljcENMzGFVnhJzjDs4rlDAGNsmHFoPATnOUzFIc/hGjQP5w7
        l2jMP54+FzQUKyf8qf6DhjqESWqYBRphQ4pJG49nL2sIaICNKPbScNyBIRRV0ySi8MdsQLHXRnEX71Rg
        X13fokbBN2N9QfWCWf6U4U7erfjEY3WIgtGcYpbwE9zNGhT3eKx8UezrpuZOs4afoAbW0uecR8oXxd5t
        at6qiPAT1MKaujzg9jpEwe+auv9TVPgJamJtbd5zWz2i6Bp/Zdkz1rgJPZxwS12i8Ouxavulfceste5f
        2mdmZmZmZmZmZmZmZmZmZrZsq9UfgapVwIZmaZ8AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="Label1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>